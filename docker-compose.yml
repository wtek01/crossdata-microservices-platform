services:
  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - JAVA_OPTS=-XX:+UseG1GC
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    env_file:
      - .env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  admin-server:
    build:
      context: .
      dockerfile: admin-server/Dockerfile
    container_name: admin-server
    ports:
      - "8085:8085"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8090:8090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_INTERVAL=10000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_INTERVAL=10000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_INTERVAL=10000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  dashboard-service:
    build:
      context: .
      dockerfile: dashboard-service/Dockerfile
    container_name: dashboard-service
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_INTERVAL=10000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - JAVA_OPTS=-XX:+UseG1GC
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    mem_limit: 512m
    cpus: 0.5
    networks:
      - microservices-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - microservices-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
