# Nom de l'application
spring.application.name=api-gateway

# Port sur lequel l'API Gateway va fonctionner
server.port=8080

# URL d'Eureka Server pour l'enregistrement des services
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Utilise l'adresse IP plutôt que le hostname pour l'enregistrement
eureka.instance.preferIpAddress=true

# Adresse IP du service (si nécessaire)
eureka.instance.ip-address=127.0.0.1

# Définit un ID d'instance unique pour éviter les doublons
eureka.instance.instanceId=${spring.application.name}:${random.value}

# Exposition de tous les endpoints pour le monitoring
management.endpoints.web.exposure.include=*

# Activation des informations détaillées pour le monitoring
management.info.env.enabled=true
management.endpoint.health.show-details=always

# Configuration du client Spring Boot Admin
spring.boot.admin.client.url=http://localhost:8085
spring.boot.admin.client.instance.service-url=http://${eureka.instance.ip-address}:${server.port}
spring.boot.admin.client.instance.prefer-ip=true

# Désactiver la découverte des services par Spring Boot Admin (dans les services)
spring.boot.admin.discovery.enabled=false

# Configuration Gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Routes
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/orders/**

spring.cloud.gateway.routes[2].id=dashboard-service
spring.cloud.gateway.routes[2].uri=lb://dashboard-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/dashboard/**
